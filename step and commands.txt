https://courses.edx.org/courses/course-v1:MongoDBx+M101x+3T2015/courseware/4cf555e7a26d4fbb87503adf07ef03ce/e244ef26acf5453bb246041bf86df1d3/?child=first


npm install express

C:/mongo

C:/data/db

Run $ mongod (to start mongodb)

Run $ mongo => $ show dbs => $ use contactlist (de switch sang database contactlist)

$ db.contactlist.insert({name: 'Tom', email: 'tom@gmail.com', number: '(444) 444 4444'})

$ db.contactlist.find()

$ db.contactlist.find().pretty()

$ db.contactlist.insert([{name: 'Tracy', email: 'tracy@gmail.com', number: '(555) 555 5555'}, {name: 'Tucker', email: 'tucker@gmail.com', number: '(777) 777 7777'}])

$ db.contactlist.remove({name: "Tucker"})

$ db.contactlist.remove({})


npm install mongojs

npm install body-parser

to run the project $node server


To test mongodb
> C:\mongo\bin>mongo
> db.test.insert({hello: "world"});
> db.test.insert({hello: "world"});
> db



Current learning

https://courses.edx.org/courses/course-v1:MongoDBx+M101x+3T2015/courseware/4cf555e7a26d4fbb87503adf07ef03ce/b43fb89d58c54858a1e5606c3669096a/?child=first

Mocha test
D:\wamp\www\meanshop\node_modules\.bin>mocha -g "fail" D:\wamp\www\meanshop\test.js
D:\wamp\www\meanshop\node_modules\.bin>mocha D:\wamp\www\meanshop\test.js
Mocha reporter format
D:\wamp\www\meanshop\node_modules\.bin>mocha -R dot D:\wamp\www\meanshop\test.js
D:\wamp\www\meanshop\node_modules\.bin>mocha -R xunit D:\wamp\www\meanshop\test.js
D:\wamp\www\meanshop\node_modules\.bin>mocha -R nyan D:\wamp\www\meanshop\test.js

D:\wamp\www\meanshop>npm test
D:\wamp\www\meanshop>npm run test-kitten

Testing with gulp
D:\wamp\www\meanshop\node_modules\.bin>gulp test


About indexing in mongodb
> for (var i = 0; i < 50000000; ++i) { db.names.insert({ name: '' + i }); }
> db.names.insert({ name: 'John' });
> db.names.find({ name: 'John' });
> db.names.createIndex({ name: 1 });
> db.names.find({ name: 'John' });

> for (var i = 0; i < 50000000; ++i) { db.names2.insert({ names: ['' + i] }); }
> db.names2.insert({ names: ['John'] });
> db.names2.find({ names: 'John' });
> db.names2.createIndex({ names: 1 });
> db.names2.find({ names: 'John' });